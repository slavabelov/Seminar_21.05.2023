Задача 64: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.
N = 5 -> "5, 4, 3, 2, 1"
N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"

namespace program
{
    class Program {
        static void Main(){
        
            Console.WriteLine("Введите значение N");
            int N = int.Parse(Console.ReadLine());
            int FinishNumber = 1;
            if (N < 0)
            {
                Console.WriteLine("Введено не положительное число");
            }

            NaturalNumbersOutput(N, FinishNumber);
            Console.WriteLine("1");
        }
 
       static int NaturalNumbersOutput(int N, int FinishNumber)
       {
            if (N == FinishNumber)
                return N;
            else
                Console.WriteLine($"{NaturalNumbersOutput(N,FinishNumber+1)}");
            return FinishNumber;
       }
    }
} 

Задача 66: Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
M = 1; N = 15 -> 120
M = 4; N = 8. -> 30

namespace program
{
    class Program {
        static void Main(){
        
            Console.WriteLine("Введите значение N");
            int N = int.Parse(Console.ReadLine());
            Console.WriteLine("Введите значение M");
            int M = int.Parse(Console.ReadLine());
            Console.WriteLine("Сумма элементов в промежутке между N и M: ");
            SumFromNToM(N, M);
        }
 
       static void SumFromNToM(int N, int M)
       {
            Console.Write(NaturalSumCount(N-1, M));
       }
       static int NaturalSumCount(int N, int M)
       {
            int SumResult = N;
            if (N == M)
                return 0;
            else
            {
                N++;
                SumResult = N + NaturalSumCount(N, M);     
                return SumResult;
            }     
       }
    }
} 

Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
m = 2, n = 3 -> A(m,n) = 9
m = 3, n = 2 -> A(m,n) = 29

namespace program
{
    class Program {
        static void Main(){
            Console.WriteLine("Введите значение M");
            int M = int.Parse(Console.ReadLine());
            Console.WriteLine("Введите значение N");
            int N = int.Parse(Console.ReadLine());
            if (N < 0 && M < 0)
            {
                Console.WriteLine("Введено не положительное число");
            }

            Console.WriteLine("Ответ после вычисления функции Аккермана: ");
            AkkermanFunctionCall(M, N);
        }
 
        static void AkkermanFunctionCall(int M, int N)
        {
            Console.Write(AkkermanFunction(M, N));
        }
        static int AkkermanFunction(int M, int N)
        {
            if (M == 0)
            {
                return N + 1;
            }
            else 
                if (N == 0 && M > 0)
                {
                    return AkkermanFunction(M - 1, 1);
                }
            else
                {
                    return (AkkermanFunction(M - 1, AkkermanFunction(M, N - 1)));
                }
        }
    }
} 
